name: 🚀 CD Pipeline
on:
  workflow_run:
    workflows: ["CI Pipeline"]  # Must match exactly the name of your CI workflow
    types:
      - completed

jobs:
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest

    if: >
      ${{
        github.event.workflow_run.conclusion == 'success' &&
        github.event.workflow_run.head_branch == 'dev'
      }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Debug DEV_PI_KEY length
        run: |
          echo "🔍 Checking DEV_PI_KEY size:"
          echo "${{ secrets.DEV_PI_KEY }}" | wc -c

      - name: 🔐 Setup SSH Key for Raspberry Pi
        run: |
          if [ -z "${{ secrets.DEV_PI_KEY }}" ]; then
            echo "❌ DEV_PI_KEY is empty!"
            exit 1
          fi

          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_PI_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          echo "🧠 Running ssh-keyscan for host: ${{ secrets.DEV_PI_HOST }}"
          ssh-keyscan -p 2225 -H ${{ secrets.DEV_PI_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || {
            echo "❌ ssh-keyscan failed for host: ${{ secrets.DEV_PI_HOST }}"
            exit 1
          }

          echo "✅ SSH key setup complete"

      - name: 🔍 Test SSH Connection
        run: |
          echo "🔌 Testing SSH connection..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 2225 \
            ${{ secrets.DEV_PI_USER }}@${{ secrets.DEV_PI_HOST }} "echo '✅ Connected successfully!'"

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: 🏗 Build Multi-Architecture Images
        run: |
          echo "🐳 Building frontend image..."
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/ukshati-frontend:${{ github.sha }} \
            -t ${{ secrets.DOCKER_USERNAME }}/ukshati-frontend:latest \
            --push .


          echo "🐳 Building MySQL image..."
          docker buildx build --platform linux/amd64,linux/arm64 \
            -f Dockerfile.mysql \
            -t ${{ secrets.DOCKER_USERNAME }}/ukshati-database:${{ github.sha }} \
            -t ${{ secrets.DOCKER_USERNAME }}/ukshati-database:latest \
            --push .


      - name: 🚀 Deploy to Raspberry Pi
        run: |
          echo "🍓 Deploying to Raspberry Pi..."

          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -euxo pipefail

          echo "🔄 Stopping existing containers..."
          docker-compose down || true

          echo "🧹 Cleaning up old images..."
          docker image prune -f

          echo "📥 Pulling latest images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/ukshati-frontend:${{ github.sha }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/ukshati-database:${{ github.sha }}

          echo "🛠 Updating docker-compose.yml with new image tags..."
          sed -i 's|image: .*ukshati-frontend.*|image: ${{ secrets.DOCKER_USERNAME }}/ukshati-frontend:${{ github.sha }}|g' docker-compose.yml
          sed -i 's|image: .*ukshati-database.*|image: ${{ secrets.DOCKER_USERNAME }}/ukshati-database:${{ github.sha }}|g' docker-compose.yml

          echo "🚀 Starting updated containers..."
          docker-compose up -d

          echo "⏳ Waiting for services to stabilize..."
          sleep 30

          echo "📦 Running docker-compose ps:"
          docker-compose ps

          echo "✅ Deployment completed!"
          EOF

          # Copy deploy script to Pi
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -P 2225 deploy.sh \
            ${{ secrets.DEV_PI_USER }}@${{ secrets.DEV_PI_HOST }}:/home/${{ secrets.DEV_PI_USER }}/

          # Run deploy script remotely
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 2225 \
            ${{ secrets.DEV_PI_USER }}@${{ secrets.DEV_PI_HOST }} \
            "cd /home/${{ secrets.DEV_PI_USER }}/Ukshati.2.0 && chmod +x deploy.sh && ./deploy.sh"

      - name: 📢 Notify Success
        if: success()
        run: echo "🎉 Deployment completed successfully!"

      - name: 📢 Notify Failure
        if: failure()
        run: echo "❌ Deployment failed!"
